import cv2
import numpy as np
import os
from tensorflow.keras.preprocessing.image import ImageDataGenerator
from google.colab import drive

# 구글 드라이브 마운트
drive.mount('/content/drive')

# 이미지 폴더 경로
folder_path = '/content/drive/MyDrive/Unknown2'

# 처리할 이미지 확장자 필터링
image_files = [f for f in os.listdir(folder_path) if f.lower().endswith(('.jpg', '.jpeg', '.png'))]

# 각 augmentation 설정
augmentation_settings = {
    'zoom': ImageDataGenerator(zoom_range=[0.5, 0.9]),
    'shift': ImageDataGenerator(width_shift_range=0.4, fill_mode='reflect'),
    'shear': ImageDataGenerator(shear_range=45),
    'brightness': ImageDataGenerator(brightness_range=(0.3, 1.2)),
    'channel_shift': ImageDataGenerator(channel_shift_range=100)
}

# 이미지 저장 함수
def save_augmented_image(image, save_path_prefix, generator, aug_type):
    image_batch = np.expand_dims(image, axis=0)

    if generator.featurewise_center or generator.featurewise_std_normalization or generator.zca_whitening:
        generator.fit(image_batch)

    data_gen_iter = generator.flow(image_batch, batch_size=1)
    aug_image = np.squeeze(next(data_gen_iter)).astype(np.uint8)
    save_path = f"{save_path_prefix}_{aug_type}.jpg"
    cv2.imwrite(save_path, cv2.cvtColor(aug_image, cv2.COLOR_RGB2BGR))
    print(f"  ▶ 저장됨: {save_path}")

# 전체 이미지에 대해 증강 적용 및 저장
for idx, img_file in enumerate(image_files):
    img_path = os.path.join(folder_path, img_file)
    img_bgr = cv2.imread(img_path)

    if img_bgr is None:
        print(f"[!] 이미지 불러오기 실패: {img_file}")
        continue

    image = cv2.cvtColor(img_bgr, cv2.COLOR_BGR2RGB)
    file_prefix = os.path.splitext(img_file)[0]
    save_prefix = os.path.join(folder_path, file_prefix)

    print(f"[{idx + 1}/{len(image_files)}] '{img_file}' 증강 중...")

    for aug_type, generator in augmentation_settings.items():
        save_augmented_image(image, save_prefix, generator, aug_type)

print("\n✅ 모든 이미지에 대해 5가지 증강 이미지 저장 완료!")