# -*- coding: utf-8 -*-
"""Injury_Classification.ipynb의 사본

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13UFCEU9d1URN0qKFnIej9UlqZh2DIajy
"""
#!pip install ultralytics

from google.colab import drive
drive.mount('/content/drive')

"""데이터 증강 사진들 합치기"""

import os
import shutil

# 원본 경로 설정
base_path = '/content/drive/MyDrive'
src1 = os.path.join(base_path, 'wound')
src2 = os.path.join(base_path, 'wound_data_augmentation')
dst = os.path.join(base_path, 'merged_wound')  # 합쳐질 폴더

# 필요한 클래스 폴더
categories = ['Abrasions', 'Bruises', 'Burns', 'Cut', 'Laseration', 'Unknown']

# 병합 폴더 생성 및 카테고리 하위 폴더 만들기
os.makedirs(dst, exist_ok=True)
for cat in categories:
    os.makedirs(os.path.join(dst, cat), exist_ok=True)

# 파일 복사 함수
def copy_files(src_dir, dst_dir):
    for cat in categories:
        src_cat = os.path.join(src_dir, cat)
        dst_cat = os.path.join(dst_dir, cat)
        if os.path.exists(src_cat):
            for fname in os.listdir(src_cat):
                src_file = os.path.join(src_cat, fname)
                dst_file = os.path.join(dst_cat, fname)
                if os.path.isfile(src_file):
                    shutil.copy2(src_file, dst_file)

# 두 폴더에서 모두 복사
copy_files(src1, dst)
copy_files(src2, dst)

print("병합 완료! 위치:", dst)



"""학습 이미지 처리"""

import os, shutil
from sklearn.model_selection import train_test_split

base_path = '/content/drive/MyDrive/merged_wound'  # 원본 폴더
save_path = '/content/drive/MyDrive/merged_wound_cls'  # YOLO용

os.makedirs(save_path + '/train', exist_ok=True)
os.makedirs(save_path + '/val', exist_ok=True)

# 각 클래스 폴더 반복
for cls_name in os.listdir(base_path):
    cls_path = os.path.join(base_path, cls_name)
    if not os.path.isdir(cls_path): continue

    images = [f for f in os.listdir(cls_path) if f.lower().endswith(('.jpg', '.png', '.jpeg'))]

    if len(images) == 0:
        print(f"⚠️ No images found in class '{cls_name}', skipping.")
        continue  # 이미지가 없으면 이 클래스는 건너뜀

    train_imgs, val_imgs = train_test_split(images, test_size=0.2, random_state=42)

    for split, img_list in zip(['train', 'val'], [train_imgs, val_imgs]):
        split_dir = os.path.join(save_path, split, cls_name)
        os.makedirs(split_dir, exist_ok=True)
        for img in img_list:
            src = os.path.join(cls_path, img)
            dst = os.path.join(split_dir, img)
            shutil.copy(src, dst)


print("✅ train/val 분리 완료")

"""모델 학습"""

from ultralytics import YOLO

model = YOLO('yolov8n-cls.pt')
model.train(data='/content/drive/MyDrive/merged_wound_cls', epochs=30, imgsz=224)

"""예측 이미지 분류 수동 테스트"""

# 1장만 테스트
results = model('/content/drive/MyDrive/wound_test/bruise_test.jpg')

# 결과 출력
print(results[0].probs)             # 각 클래스 확률
print(results[0].names)             # 클래스 이름
print(results[0].probs.top1)        # 예측된 클래스 ID

"""이미지 분류 자동 테스트"""

from ultralytics import YOLO

# 학습된 모델 불러오기 (경로는 본인 환경에 맞게 수정)
model = YOLO('/content/runs/classify/train/weights/best.pt')

# 검증 데이터셋으로 평가 (YOLOv8은 자동으로 val 폴더 찾음)
metrics = model.val()

# 결과 보기
print(metrics)

"""여러 이미지에 대한 평가"""

from ultralytics import YOLO

# 학습된 모델 불러오기 (경로는 본인 환경에 맞게 수정)
model = YOLO('/content/runs/classify/train/weights/best.pt')

# 검증 데이터셋으로 평가 (YOLOv8은 자동으로 val 폴더 찾음)
metrics = model.val()
import shutil
import os

src_val_path = '/content/drive/MyDrive/wound_cls/val'
dst_val_flat = '/content/drive/MyDrive/val_flat'
os.makedirs(dst_val_flat, exist_ok=True)

for cls in os.listdir(src_val_path):
    cls_folder = os.path.join(src_val_path, cls)
    if not os.path.isdir(cls_folder): continue
    for file in os.listdir(cls_folder):
        if file.endswith(('.jpg', '.png', '.jpeg')):
            shutil.copy(os.path.join(cls_folder, file), os.path.join(dst_val_flat, f'{cls}_{file}'))

results = model.predict(
    source='/content/drive/MyDrive/val_flat',
    save=True,
    project='/content/drive/MyDrive/wound_results',
    name='predicted'
)